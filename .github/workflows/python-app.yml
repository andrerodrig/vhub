# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions


name: Python application

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.10
      uses: actions/setup-python@v2
      with:
        python-version: "3.8"
    - name: Install Poetry
      uses: abatilo/actions-poetry@v2.1.0
      with:
        poetry-version: 1.1.2
    - name: Configure Poetry
      shell: bash
      run: python -m poetry config virtualenvs.in-project true
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        poetry install
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Setup database
      run: |
        # Run the migrations to setup the database
        poetry run python manage.py migrate
    - name: Configure the secret key
      run: |
        # The .env file must to be created with the SECRET_KEY.
        touch .env
        echo "SECRET_KEY=testkeyforcisetup" > .env
    - name: Test with django
      run: |
        poetry run python manage.py test
